.row
  .medium-12.column
    %span.hint--bottom-left.hint--rounded.hint--bounce.hint--medium.fr{"aria-label" => "Observers of a request are notified when the request is updated, commented on, or approved."} ?
    .card
      .card-head.column
        %h2
          Observers
      .content-content.column
        - if policy(Observation.new(proposal: @proposal)).can_create?
          .row
            .medium-12.column
              = select_tag "observation[user][id]",
                options_from_collection_for_select( proposal.eligible_observers, :id, :email_address),
                class: "js-selectize observation-input", include_blank: true
              = label :reason,
                "Reason for adding observer (optional): ",
                data: { "hide-until-select" => "observation_user_id" }
              = text_field :observation,
                :reason,
                class: "form-field observation-input",
                data: { "hide-until-select" => "observation_user_id" },
                placeholder: "Reason"
          .row
            .column.text-right
              = button_tag "Add an Observer",
                id: :add_subscriber,
                data: { "disable-if-empty" => "observation_user_id" },
                class: "button primary round"
        %ul.observer-list
          - @subscriber_list.each do |user, role_str, observation|
            = render partial: "proposals/details/observer_row",
              locals: { user: user, role_str: role_str, observation: observation, proposal: proposal }
