- content_for :title, "NCR Request"

= render partial: 'layouts/scripts'

.row
  .medium-7.medium-offset-1.columns

    %h3
      New Purchase Card Approval Request

    = simple_form_for @client_data_instance, html: { multipart: true } do |f|
      %h4
        Request details

      = f.input :project_title

      = f.input :description

      = field_set_tag "Expense type", class: "expense-type" do
        = expense_type_radio_button(f, "BA60")
        = expense_type_radio_button(f, "BA61")
        = f.input :emergency,
          disabled: @client_data_instance.persisted?,
          wrapper_html: { data: { filter_key: "expense-type", filter_value: "BA61" } },
          input_html: { class: "respect-disabled", value: @client_data_instance.emergency }
        = expense_type_radio_button(f, "BA80")
        = render partial: "ba_80_fields",
          locals: { f: f }

      = f.input :building_number,
        input_html: { class: "js-selectize required", data: { initial: JSON.generate(building_options) }}

      = f.association :ncr_organization,
        as: :select,
        prompt: :translate,
        input_html: { class: "js-selectize", data: { initial: JSON.generate(organization_options) }}

      = f.input :vendor,
        input_html: { class: "js-selectize required", data: { initial: JSON.generate(vendor_options(@client_data_instance.vendor)) }}

      = field_set_tag "Amount", class: "required" do
        = f.input :amount,
          as: :currency,
          label_html: { class: "sr-only" },
          input_html: { data: popover_data_attrs("ncr_amount") }
        = f.input :not_to_exceed,
          as: :radio_buttons,
          collection: [["Exact", false], ["Not to exceed", true]], label: false

      = f.input :direct_pay,
          label: t("simple_form.labels.ncr_work_order.direct_pay_html"),
          label_html: { data: popover_data_attrs("direct_pay") }

      %h4
        Approver

      = f.association :approving_official,
        disabled: @client_data_instance.proposal.approver_email_frozen?,
        collection: scoped_approver_options(@client_data_instance.ineligible_approvers),
        as: :select,
        label_method: :email_address,
        value_method: :id,
        prompt: :translate,
        input_html: { class: "js-selectize required" }

      - if @client_data_instance.new_record?
        = render partial: "attachments"
      - else
        = field_set_tag "Budget codes" do
          = f.input :cl_number
          = f.input :function_code
          = f.input :soc_code

      = f.submit class: "form-button"

      - if @client_data_instance.persisted?
        = link_to "Discard Changes", proposal_path(@client_data_instance.proposal), class: "discard-link"
